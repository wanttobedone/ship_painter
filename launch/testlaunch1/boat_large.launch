<launch>
    <!-- 使用大船模型的参数 -->
    <arg name="ship_model" default="large_boat"/>
    <arg name="ship_x" default="5.0"/>
    <arg name="ship_y" default="7.5"/>
    <arg name="ship_z" default="0.0"/>  <!-- 地面上 -->
    
    <!-- 路径规划参数（适配大船） -->
    <arg name="offset_distance" default="1.2"/>  <!-- 增加偏移距离 -->
    <arg name="slice_interval" default="0.5"/>   <!-- 增加切片间隔以减少层数 -->
    <arg name="slice_thickness" default="0.3"/>  <!-- 增加厚度确保捕获点 -->
    
    <!-- 设置无人机型号 -->
    <env name="PX4_SIM_MODEL" value="iris" />
    
    <!-- 添加模型路径到Gazebo环境变量 -->
    <env name="GAZEBO_MODEL_PATH" value="$(find ship_painter)/models:$(optenv GAZEBO_MODEL_PATH)" />
    
    <!-- XTDrone 的 PX4 启动配置 -->
    <include file="/home/demo/PX4_Firmware/launch/indoor1.launch">
        <arg name="world" value="$(find ship_painter)/worlds/ship.world"/>
    </include>
    
    <!-- 生成大船模型 -->
    <node name="spawn_large_boat" pkg="gazebo_ros" type="spawn_model" 
          args="-sdf -file $(find ship_painter)/models/$(arg ship_model)/model.sdf 
                -model $(arg ship_model) 
                -x $(arg ship_x) 
                -y $(arg ship_y) 
                -z $(arg ship_z)" 
          launch-prefix="bash -c 'sleep 5; $0 $@' " 
          output="screen"/>
    
    <!-- 启动船体喷涂节点 -->
    <node name="ship_painter_node" pkg="ship_painter" type="ship_painter_node" 
          output="screen" ns="iris_0"
          launch-prefix="bash -c 'sleep 10; $0 $@' ">
        
        <!-- STL模型路径 -->
        <param name="model_path" value="$(find ship_painter)/models/$(arg ship_model)/meshes/boat.stl"/>
        
        <!-- 模型位置 -->
        <param name="model_x" value="$(arg ship_x)"/>
        <param name="model_y" value="$(arg ship_y)"/>
        <param name="model_z" value="$(arg ship_z)"/>
        
        <!-- 路径规划参数 -->
        <param name="offset_distance" value="$(arg offset_distance)"/>
        <param name="slice_interval" value="$(arg slice_interval)"/>
        <param name="slice_thickness" value="$(arg slice_thickness)"/>
        
        <!-- 飞行参数 -->
        <param name="takeoff_height" value="2.0"/>
        <param name="waypoint_tolerance" value="0.4"/>
        <param name="flight_speed" value="1.5"/>
        <param name="frame_id" value="world"/>
    </node>
    
    <!-- 启动可视化 -->
    <node name="rviz" pkg="rviz" type="rviz" 
          args="-d $(find ship_painter)/rviz/ship_painter.rviz"
          launch-prefix="bash -c 'sleep 3; $0 $@' "/>
    
    <!-- TF变换 -->
    <node pkg="tf" type="static_transform_publisher" name="world_to_map" 
          args="0 0 0 0 0 0 world map 100"/>
    
    <!-- 诊断监控节点 -->
    <node name="mavros_monitor" pkg="rostopic" type="rostopic" 
          args="echo -n 1 /iris_0/mavros/state"
          output="screen"
          launch-prefix="xterm -e"/>
</launch>